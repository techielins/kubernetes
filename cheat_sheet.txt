Create a new pod with the nginx image.

~# kubectl run nginx --image=nginx

What is the image used to create the new pods ( in replicaset )

~# kubectl describe rs newpods |grep -i image

Which nodes are pods placed on?

~# kubectl get po -o wide

What images are used in the new webapp pod?

~# kubectl describe po webapp |grep -i image

What is the state of the container in the pod webapp?

~# kubectl describe po webapp |grep -i state

Delete the webapp Pod.

~# kubectl delete pod webapp

To change image of a running pod

~# kubectl edit pod <pod_name>

How many ReplicaSets exist on the system?

~# kubectl get rs

Delete replicaset

~# kubectl delete rs >replicaset_name>

Scale the ReplicaSet to 5 PODs.

~# kubectl scale rs new-replica-set --replicas=5

What is the image used to create the pods in the frontend-deployment deployment?

~# kubectl describe deployments frontend-deployment |grep -i image












Taking a snapshot of the keyspace served by $ENDPOINT to the file snapshotdb:

~# ETCDCTL_API=3 etcdctl --endpoints=https://127.0.0.1:2379 \
  --cacert=<trusted-ca-file> --cert=<cert-file> --key=<key-file> \
  snapshot save /opt/snapshot-pre-boot.db
  
  Verify the snapshot:
  
  ~# ETCDCTL_API=3 etcdctl --write-out=table snapshot status /opt/snapshot-pre-boot.db
  
  Restoring an etcd cluster
  
  ~# ETCDCTL_API=3 etcdctl --endpoints 127.0.0.1:2379 --data-dir=/var/lib/etcd-new snapshot restore /opt/snapshot-pre-boot.db
  
